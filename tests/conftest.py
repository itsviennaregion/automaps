import psycopg2
import pytest
from pytest_postgresql import factories
from sqlalchemy import create_engine

import automaps.db


def load_database(**kwargs):
    sql_statements = """
        CREATE EXTENSION postgis;
        CREATE TABLE cities (
            id serial PRIMARY KEY,
            name varchar);
        SELECT AddGeometryColumn('cities', 'geom', 32633, 'MULTIPOLYGON', 2);
        INSERT INTO cities (name, geom) VALUES
            ('Achau', st_geomfromtext('MULTIPOLYGON(((602017.181426894 5328317.6587141035,602243.2123493581 5328256.050563992,602396.4477513427 5328262.120898356,603719.3187412418 5327817.2138401875,604033.756921334 5327757.560346753,604320.8834604352 5327756.88441252,604375.593939733 5327731.138058369,605374.3179149753 5327369.638322711,605333.8358915751 5327277.452370518,605398.718052075 5327196.243183193,605380.6993071482 5327116.240102403,605105.925045597 5326851.031939206,604857.1121278402 5326670.284537958,604565.8022414397 5326488.528942497,604277.635291374 5326140.669039594,604347.3995719408 5326146.8394452045,604607.2659869812 5325522.98524265,604260.048897555 5325378.346433478,604577.7992177663 5324609.7030264,604564.9572873822 5324599.550359827,604669.4335299649 5324316.194588745,604661.6166901827 5323993.504851531,604681.9070278564 5323557.189108656,604635.6084777003 5323370.990151662,604530.2296463716 5323170.990277022,604473.3745598653 5323068.563782376,604441.368555107 5323101.927377034,604508.0021636547 5323240.166057747,604107.5699820474 5323381.391427412,604132.6533221327 5323487.643949529,603650.9146124615 5323659.274601104,603638.8524100239 5323711.919036101,602764.4735168533 5323953.227248009,602626.017030543 5324031.784123212,602638.6729515604 5324078.028504839,602469.6170652384 5324152.775706827,602518.171705805 5324208.051338746,602536.9613578361 5324288.656758355,602520.8296277854 5324404.702995972,602810.1021405284 5325099.72564118,602806.1189344056 5325118.914970294,602684.4067700632 5325078.987581765,602517.8491185782 5325074.326809493,602430.0366821915 5325044.536598757,602123.4635652915 5325333.300488241,602133.0819088315 5325344.2657523295,601944.9600820481 5325569.33176235,601705.3802202431 5325948.436013685,601763.4490356821 5325946.923728891,601415.84134844 5325986.815780201,601449.5664076286 5326113.594476623,601368.7757400362 5326055.459331587,601392.4746099375 5326301.359507971,601372.5437681598 5326302.673331864,601373.1262423863 5326315.77208193,601461.4922361383 5326901.231010477,601516.1463842 5327588.411994143,601546.0147870044 5327604.948343555,601806.048022133 5328423.649893776,602017.181426894 5328317.6587141035)))', 32633)), 
            ('Traiskirchen', st_geomfromtext('MULTIPOLYGON(((597571.4309132553 5316394.674383685,597334.4138419973 5315638.890201182,597334.7690470269 5315552.0583728785,597299.5753717187 5315374.812906826,597322.2236618934 5315318.743160889,597269.0053686618 5315274.656936012,597194.3816796939 5315058.54409234,597215.0634560083 5314944.587957459,597318.9166588126 5314783.7401174,597356.3204129538 5314628.009708438,597314.9999273884 5314098.586615197,597158.6859537557 5313804.6092012245,596909.4890721657 5313883.750055802,597255.79691069 5314545.328851429,597034.7906488515 5314576.2953374125,596840.7056102817 5314328.866569661,596472.6050951732 5314453.069992374,596412.5512869245 5314488.158813837,595974.9507751443 5314760.842557312,594760.1965051402 5315410.477206036,594382.2563220258 5315630.5832081735,594192.164083576 5315685.971520539,594107.1123115076 5315735.790690592,593949.1462074431 5315908.837013347,593918.8862494427 5315953.525666685,593918.1999901168 5315991.388224993,593856.0629964498 5316024.6366621945,593793.611207799 5316086.415526989,593750.2486298159 5316161.382173563,593704.6303027588 5316324.618600269,593693.4628492646 5316501.988026487,593696.2449260651 5316531.231689353,593742.9204305147 5316528.061504713,593750.3503935654 5316686.267568309,593822.5426366024 5316974.5368099585,593929.2990517567 5317002.979429282,593960.8056504133 5317086.625547546,594021.1496650985 5317089.201894551,594018.2229141841 5317155.122676935,594249.7050922373 5317180.013151765,594226.560803403 5317401.52782281,594172.1382656072 5317451.959853681,594154.7363106996 5317440.7825625865,594017.4157895311 5317469.902757862,594001.3069210697 5317725.477467874,593971.2396823209 5317731.952839215,593952.6889748671 5317899.129719542,594008.6406152494 5317898.450885797,594017.7487250861 5317835.434316157,594063.4275052629 5317785.533563493,594125.1813094699 5317787.66390906,594174.6166106819 5317989.951304923,594274.2158356009 5317995.538155666,594561.9091495669 5317947.922967078,594559.8096898625 5318360.866617518,594580.5367547538 5318387.381795972,594567.1997060481 5318396.549737763,594558.4505149107 5318385.029205443,594558.4955911798 5318397.580189441,594753.134362436 5318649.958852797,594996.5940412107 5318712.8194397045,595145.620343498 5318734.309668405,595156.2367284707 5318756.911105399,595260.5314891385 5318987.129261197,595409.7052214618 5319212.25145353,595190.7497915933 5319386.20965597,595230.8704161264 5319450.42614492,595197.2606803308 5319537.718653828,595088.5926587094 5319684.014788253,594917.1066687385 5319866.018586257,594806.9851229533 5320062.128029415,594691.8520085467 5320172.103953431,594588.443497501 5320231.494662668,594431.328900588 5320235.951192874,594135.0826343214 5320356.621555673,594127.6178858104 5320425.012134289,594371.3525353195 5320890.821355926,594600.259942679 5321166.372434973,594816.8995737463 5321021.045529986,595000.0783509392 5320920.742735922,595188.8251646461 5320842.987688546,595298.8032712091 5320764.222933757,595313.276806859 5320736.306556027,595615.6196984297 5320483.0310216015,595823.367790902 5320342.913970258,595929.6382131067 5320466.010285504,596059.778655736 5320500.652139602,596428.4145513414 5320875.875230944,596515.8385614146 5320900.1554523595,596677.995107266 5320900.782596112,596723.0603503968 5320935.697318945,596727.3185319446 5321034.957153556,596602.9931041857 5321202.611898839,596603.1000986574 5321357.48602477,596697.0689381917 5321477.888756191,596799.9446226782 5321543.974336977,596843.210523018 5321548.09913968,596829.6516724156 5321692.090352271,596908.9231947383 5321775.218002175,596941.8678499694 5321920.463497841,597004.808041633 5321981.047209469,597079.4948063787 5322004.2393464465,597116.2004840208 5321993.238168455,597189.5996754167 5321929.3772167275,597207.3865686931 5321871.5253301505,597361.4863611588 5321785.259845969,597304.491838 5321619.315738824,597591.9257157109 5321542.992913232,597633.9386696605 5321628.949817965,597716.5407289662 5321609.175493138,597708.5528228248 5321537.606387316,597948.6730373182 5321490.167652262,597973.4169346549 5321387.140917556,597940.4071301119 5321321.07718583,598278.4766638295 5321123.058339366,598252.3387247209 5321075.251765485,598687.9374130414 5320845.367873588,598689.8527106111 5320796.598401557,598704.304887792 5320787.179783366,598914.5327597106 5320680.730263462,599441.5575442197 5320502.285071625,599435.4716738428 5320429.428786455,599554.5779672626 5320463.300067836,599637.4995654933 5320464.918037033,599615.523041426 5320392.776821409,599853.5482464683 5320306.495869233,600330.1244938222 5320094.959119782,600342.5336286089 5320099.52434972,600344.552135525 5320144.573497693,600538.7017777606 5320032.415141131,600712.3252423105 5319898.332804686,600715.4404044725 5319911.23574554,601106.8555345793 5319712.568775588,601021.821507415 5319593.509549183,600988.4647370429 5319561.275921571,600977.7483740964 5319573.797927254,600792.122936987 5319253.141014285,600969.8474547167 5319175.432976587,600983.3117531935 5319154.318374073,600946.0081206572 5319086.780923803,600915.92959593 5318964.10509677,600695.5263513855 5318999.348403313,600684.2668133829 5318946.370717088,600526.2545462748 5318961.508141222,600482.0964162493 5318792.754473866,600421.055924199 5318762.130151446,600437.3996189611 5318715.049856674,600408.6761077442 5318683.766024424,600387.0563030702 5318690.280479547,600298.6294129259 5318657.841230015,600231.0312791059 5318559.091552474,600127.3539225378 5318650.832473159,599916.6864526251 5318400.842598537,599947.8911006574 5318294.1674595615,599853.9048985697 5318125.679962144,599777.7538711266 5318090.554125907,599640.2275938308 5318156.590868687,599524.9928126849 5318085.072478992,599457.083284806 5317975.410008968,599371.6106504779 5317893.118933545,599371.555810673 5317863.98191266,599094.1192207562 5317911.495520372,598995.8033089024 5317710.177517569,598726.9179843733 5317890.762051847,598356.639146483 5317364.683684457,598759.0213527135 5317089.1261013225,598864.9298367919 5316898.597841002,598801.8801300612 5316820.6160429455,598804.1239927777 5316735.606317494,598806.62889883 5316491.831789187,598343.3080739856 5316691.644156071,598285.2379489674 5316507.512456714,598196.3787568358 5316534.707860833,598142.1692757364 5316462.418559834,598014.1808737172 5316424.634631772,597571.4309132553 5316394.674383685)))', 32633));""".split(
        ";"
    )[
        :-1
    ]

    conn = psycopg2.connect(**kwargs)
    with conn.cursor() as cur:
        for statement in sql_statements:
            cur.execute(statement)
        conn.commit()


postgresql_proc = factories.postgresql_proc(load=[load_database])

postgresql = factories.postgresql("postgresql_proc")


@pytest.fixture
def mock_engine(mocker, postgresql):
    engine = create_engine("postgresql+psycopg2://", creator=lambda x: postgresql)
    mocker.patch.object(automaps.db, "get_engine", autospec=True, return_value=engine)
